.btn {
    &,
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        /*transition always goes to the initial state */
        position: relative;
        font-size: $default-font-size;


        //Change for the <button> element
        border: none;
        cursor: pointer;
    }

    &:hover {
        transform: translateY(-0.3rem);
        box-shadow: 0 10px 20px rgba($color-black, .2);
    }

    &:active {
        transform: translateY(-0.1rem);
        box-shadow: 0 5px 10px rgba($color-black, .2);
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
        }
    }

    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        /* position set to absolute and top is 0 and left is 0, the element will appear on the same position as its parent */
        top: 0;
        left: 0;
        z-index: -1;
        /*z-index control the 3rd axis (-1 for behind, 1 for in front) */
        transition: all .4s;
    }


    &:hover::after {
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0;
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards;
        /*
    animation-fill-mode: backwards --> applies the animation styles before the animation begins
    animation-fill-mode: forwards --> the last styles applied at the end of the animation are retained afterwards.
    */
    }
}
.btn--green{
    background-color: $color-primary;
    color: $color-white;
    margin-top: 2rem;
}
.btn-text {

    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: .1rem solid $color-primary;
        padding: .3rem;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-.2rem);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }
}